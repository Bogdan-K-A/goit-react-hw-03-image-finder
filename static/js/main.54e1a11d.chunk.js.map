{"version":3,"sources":["Component/ImageGalleryItem/ImageGalleryItem.module.css","Component/Button/Button.module.css","Component/Modal/Modal.module.css","Component/ImageGallery/ImageGallery.module.css","Component/Searchbar/Searchbar.js","Component/Spinner/Spinner.js","Component/ImageGalleryItem/ImageGalleryItem.js","Component/ImageGallery/ImageGallery.js","Servise/imagesApi.js","Component/Button/Button.js","Component/Modal/Modal.js","App.js","index.js","Component/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchinput","handelNameImg","e","value","currentTarget","setState","toLowerCase","handelSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","s","SearchForm","type","SearchFormButton","style","width","height","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","Spinner","color","ImageGalleryItem","imgSrc","imgUrl","onModalOpen","onClick","src","alt","ImageGalleryItemImage","ImageGallery","result","map","id","webformatURL","largeImageURL","imagesApi","imagesName","numPage","params","fetch","then","response","ok","json","Promise","reject","Error","Button","onLoadMore","Center","Modal","closeModal","code","window","addEventListener","largImageURL","Overlay","App","status","page","imgFatchApi","fetchAPI","images","total","prevProps","hits","handleSroll","catch","scrollTo","top","behavior","handelOpenModal","url","handelCloseModal","handelSearchSubmitForm","handelLoadMore","prevState","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e1a11d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__uiZNy\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__27J6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2mEwQ\",\"Center\":\"Button_Center__b3MOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__q05bW\",\"Modal\":\"Modal_Modal__2YQrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DH5sK\"};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ImSearch } from 'react-icons/im'\r\nimport s from './Searchbar.module.css'\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    searchinput: '',\r\n  }\r\n\r\n  /* ---------------------------- Отслеживает запрос в инпуте --------------------------- */\r\n  handelNameImg = (e) => {\r\n    const { value } = e.currentTarget\r\n    this.setState({ searchinput: value.toLowerCase() })\r\n  }\r\n\r\n  /* ----------------------------- запрос в сабмит и запись в state---------------------------- */\r\n  handelSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { searchinput } = this.state\r\n\r\n    /* ---------------- если инпут пустой выпадет предупреждение ---------------- */\r\n    if (searchinput.trim() === '') {\r\n      return toast.error('Введите запрос')\r\n    }\r\n    this.props.onSubmit(searchinput)\r\n    /* ------------------- очистка инпута посне нажатия кнопки ------------------ */\r\n    this.setState({ searchinput: '' })\r\n  }\r\n\r\n  render() {\r\n    const { searchinput } = this.state\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handelSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <ImSearch style={{ width: 20, height: 20 }} />\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchinput}\r\n            onChange={this.handelNameImg}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Searchbar\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  )\r\n}\r\nexport default Spinner\r\n","import PropTypes from 'prop-types'\r\nimport s from './ImageGalleryItem.module.css'\r\n\r\n/* ------------------------ пропсы приходят через ImageGallery------------------------ */\r\n\r\nfunction ImageGalleryItem({ imgSrc, imgUrl, onModalOpen }) {\r\n  return (\r\n    <li\r\n      className={s.ImageGalleryItem}\r\n      onClick={() => {\r\n        onModalOpen(imgUrl)\r\n      }}\r\n    >\r\n      <img src={imgSrc} alt=\"\" className={s.ImageGalleryItemImage} />\r\n    </li>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  imgSrc: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  onModalOpen: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './ImageGallery.module.css'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\n/* --------------------------- result приходит из handelSearchSubmitForm--------------------------- */\r\nfunction ImageGallery({ onModalOpen, result }) {\r\n  // console.log(result)\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {/* достаём из массива result нужные элементы и передаём в item  */}\r\n      {result.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          imgUrl={largeImageURL}\r\n          imgSrc={webformatURL}\r\n          onModalOpen={onModalOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onModalOpen: PropTypes.func.isRequired,\r\n  result: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n}\r\n\r\nexport default ImageGallery\r\n","function imagesApi(imagesName, numPage) {\r\n  // console.log(imagesName)\r\n  // console.log(numPage)\r\n  const API_KEY = '23996907-65b7baf3ba7389d44636c5d9e'\r\n  const BASE_URL = `https://pixabay.com/api/`\r\n  const params = `?q=${imagesName}&page=${numPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n  const URL = BASE_URL + params\r\n\r\n  return fetch(URL).then((response) => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    return Promise.reject(new Error())\r\n    // return Promise.reject(new Error(`Такого названия ${imagesName} нет`))\r\n  })\r\n}\r\n\r\nexport default imagesApi\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Button.module.css'\r\n\r\n/* -------------------------- пропс onLoadMore приходит из App ------------------------- */\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <div className={s.Center}>\r\n      <button className={s.Button} type=\"button\" onClick={onLoadMore}>\r\n        Загрузить ещё\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Modal.module.css'\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    largImageURL: PropTypes.string.isRequired,\r\n  }\r\n\r\n  /* ------------------------- методы жизненного цикла в которые записаны слушатели событий ------------------------ */\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.closeModal)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener('keydown', this.closeModal)\r\n  }\r\n\r\n  /* ------------- функция закрытия модалки по нажатию на Escape переданная через пропс ------------ */\r\n  closeModal = (e) => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClick()\r\n    }\r\n  }\r\n  render() {\r\n    const { onClick, largImageURL } = this.props\r\n    return (\r\n      <div className={s.Overlay} onClick={onClick}>\r\n        <div className={s.Modal}>\r\n          <img src={largImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Modal\r\n","import React, { Component } from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport Searchbar from './Component/Searchbar/Searchbar'\nimport Spinner from './Component/Spinner/Spinner'\nimport ImageGallery from './Component/ImageGallery/ImageGallery'\nimport fetchAPI from '../src/Servise/imagesApi'\nimport Button from './Component/Button/Button'\nimport Modal from './Component/Modal/Modal'\n\nexport class App extends Component {\n  state = {\n    searchinput: '',\n    error: null,\n    status: 'idle',\n    page: 1,\n    result: [],\n  }\n\n  /* -------------------- Сравнение запроса при  обновлении ------------------- */\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.searchinput //Предыдущий запрос\n    const nextName = this.state.searchinput //Текущий запрос\n    /* --------------------------- Сравнение запросов --------------------------- */\n    if (prevName !== nextName) {\n      this.setState({ status: 'panding', page: 1 })\n      this.imgFatchApi()\n\n      // console.log('zamena')\n      // console.log('prevName:', prevName)\n      // console.log('nextName:', nextName)\n    }\n  }\n\n  /* -------------------------- функция фетч запроса -------------------------- */\n  imgFatchApi = () => {\n    const { searchinput, page } = this.state\n    // console.log(searchinput)\n    // console.log(page)\n\n    fetchAPI(searchinput, page)\n      .then((images) => {\n        if (images.total === 0) {\n          this.setState({\n            error: `Нет картинок по запросу ${searchinput}`,\n            status: 'rejected',\n          })\n        } else {\n          this.setState((prevProps) => ({\n            result: [...prevProps.result, ...images.hits],\n            status: 'resolved',\n            page: prevProps.page + 1,\n            searchinput: searchinput,\n          }))\n          /* ---------------- проскроливает после нажатия загрузить ещё --------------- */\n          this.handleSroll()\n        }\n      })\n      .catch((error) => this.setState({ error, status: 'rejected' }))\n  }\n\n  /* ------------------------ Функция прокрутки ------------------------ */\n  handleSroll = () => {\n    window.scrollTo({\n      top: 2000,\n      behavior: 'smooth',\n    })\n  }\n  /* ------------------------ Функция открытия модалки ------------------------ */\n  // передаём в функцию аргумент url в который будет записан пропс в компоненте модалки\n  handelOpenModal = (url) => {\n    this.setState({\n      largImageURL: url,\n    })\n  }\n\n  /* ------------------------ функция закрытия модалки ------------------------ */\n  handelCloseModal = () => {\n    this.setState({\n      largImageURL: '',\n    })\n  }\n\n  /* ------------------------- функция запроса в форме ------------------------- */\n  handelSearchSubmitForm = (imagesName) => {\n    // console.log(imagesName)\n    this.setState({ searchinput: imagesName })\n  }\n\n  /* ---------------------- Функция кнопки загрузить ещё ---------------------- */\n  handelLoadMore = () => {\n    this.setState({\n      status: 'panding',\n    })\n    this.imgFatchApi()\n  }\n\n  render() {\n    const { largImageURL, error, status, result } = this.state\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handelSearchSubmitForm} />\n\n        {status === 'panding' && <Spinner />}\n\n        {status === 'resolved' && (\n          <>\n            <ImageGallery onModalOpen={this.handelOpenModal} result={result} />\n            <Button onLoadMore={this.handelLoadMore} />\n          </>\n        )}\n\n        {largImageURL && (\n          <Modal largImageURL={largImageURL} onClick={this.handelCloseModal} />\n        )}\n\n        {status === 'rejected' && <p>{error}</p>}\n\n        <ToastContainer autoClose={3000} position=\"top-center\" />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1W7tV\",\"SearchForm\":\"Searchbar_SearchForm__3-GG1\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3AvyU\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1Ygz_\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3qHUO\"};"],"sourceRoot":""}